{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","split","join","filter","element","defaultProps","Alert","height","alert","word","lower","charAt","slice","capitalise","msg","App","Mode","setMode","setalert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1390dbd2.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <Link className=\"nav-link active\" to=\"/about\">About</Link>\r\n                        </li> */}\r\n\r\n\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`} >\r\n                    <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode==='light'?'dark':'light'} Mode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nNavbar.propTypes = { title: PropTypes.string.isRequired };\r\nNavbar.defaultProps = {\r\n    title : 'Set Your Title Here'\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState('');\r\n    const handleOn = (event)=>{\r\n        \r\n        setText(event.target.value);\r\n    }\r\n    const handleUpConv = ()=>{\r\n        \r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Text Converted to UpperCase\", \"success\");\r\n    }\r\n    const handleloConv = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Text Converted to LowerCase\", \"success\");\r\n    }\r\n    const clearText = ()=>{\r\n        let newText = \" \";\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared\", \"success\");\r\n    }\r\n    const removeWhite = ()=>{\r\n        let newText = text.split(\" \").join(\"\");\r\n        setText(newText);\r\n        props.showAlert(\"WhiteSpaces Removed\", \"success\");\r\n\r\n\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <div  className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n            <h1 className=\"mb-2\">{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                \r\n                <textarea className=\"form-control\" value = {text} onChange={handleOn}  style={{backgroundColor: props.mode==='dark'?'#13466E':'white', color: props.mode==='light'?'black':'white'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleUpConv}>Convert to Uppercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick = {handleloConv}>Convert To LowerCase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick = {clearText}>Clear Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick = {removeWhite}>Remove Whitespaces</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n            <h1>Your Text Summary</h1>\r\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length !== 0}).length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").filter((element)=>{return element.length !== 0}).length} Minutes raed.</p>\r\n            <h2>Text Preview</h2>\r\n            <p>{text.length>0?text:\"Nothing To Preview!\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalise = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height:'50px'}}>\r\n\r\n        {props.alert && <div className= {`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalise(props.alert.type)}!</strong> {props.alert.msg}.\r\n        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import \"./App.css\";\nimport React, { useState } from 'react'\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\n// import About from \"./components/About\";\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n  \n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [Mode, setMode] = useState('light');\n  const [alert, setalert] = useState(null);\n\n  const showAlert = (message, type)=>{\n      setalert({\n        msg:message,\n        type: type\n      })\n      setTimeout(() => {\n        setalert(null);\n        \n      }, 1000);\n\n  }\n\n  const toggle =()=>{\n    if(Mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been enabled\", \"success\");\n\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n\n      <Navbar title=\"TextUtils\" mode={Mode} toggleMode = {toggle} />\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      {/* <Switch>\n          <Route exact path=\"/about\">\n            <About mode={Mode} />\n          </Route>\n          \n          <Route exact path=\"/\"> */}\n          <TextForm showAlert ={showAlert}heading=\"Try TextUtils- Word Counter, Charaacter Counter, Remove ExtraSpaces \" mode={Mode}/>\n            \n          {/* </Route>\n        </Switch> */}\n        \n      </div>\n    {/* </Router>\n       */}\n      \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}